#!/bin/sh

countries() {

awk '

BEGIN {
	arr = ""
	buf = ""
	print "module.exports ="
}

/^const char (\* )?GeoIP_country_/ {
	arr = $0
	i = index(arr, "_country_")
	if (i) {
		arr = substr(arr, i+9)
		i = index(arr, "[")
		arr = substr(arr, 1, i-1)
	}
	buf = ""
}

/\}\;$/ {
	buf = buf $0
	gsub(/.*{/, "", buf)
	gsub(/};/, "", buf)
	gsub(/	/, "", buf)
	if (arr) {
		print "	\"" arr "\": [" buf "]"
	}
	arr = ""
}

{
	if (arr) {
		buf = buf $0
	}
}

END {
}

'

}

timezones() {

awk '

BEGIN {
	country = ""
	region = ""
	print "module.exports ="
}

/strcmp \(country\, "([A-Z]+)"\)/ {
	if (country) s = $6; else s = $5
	country = substr(s,2,2)
	region = ""
}
/strcmp \(region\, \"([A-Z0-9]+)\"\)/ {
	if (region) s = $6; else s = $5
	region = substr(s,2,2)
}
/timezone = "/ {
	print "	\"" country region "\": \"" substr($3,2,length($3)-3) "\""
}

END {
}

'

}

(
	if ! test -f GeoLiteCity.dat; then
		wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
		gunzip GeoLiteCity.dat.gz
	fi
	mkdir -p build
	cd build
	# fetch libGeoIP sources
	V=1.4.7beta10
	if ! test -f GeoIP-$V/libGeoIP/GeoIP.c; then
		wget http://geolite.maxmind.com/download/geoip/api/c/test/GeoIP-$V.tar.gz
		tar -xzpf GeoIP-$V
	fi
	cd ..
	# extract info
	countries <build/GeoIP-$V/libGeoIP/GeoIP.c >country.coffee
	timezones <build/GeoIP-$V/libGeoIP/timeZone.c >timezone.coffee
	# TODO: parse also regionName.c
	# ...
	# 
	# make the first run
	coffee index.coffee
)
